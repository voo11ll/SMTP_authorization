// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: organization.proto

package organization

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// B24OrganizationServiceClient is the client API for B24OrganizationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type B24OrganizationServiceClient interface {
	//*
	// Business Universe
	CreateBusinessUniverse(ctx context.Context, in *BusinessUniverseCreateRequest, opts ...grpc.CallOption) (*BusinessUniverseCreateResponse, error)
	GetBusinessUniverse(ctx context.Context, in *BusinessUniverseGetRequest, opts ...grpc.CallOption) (*BusinessUniverseGetResponse, error)
	UpdateBusinessUniverse(ctx context.Context, in *BusinessUniverseUpdateRequest, opts ...grpc.CallOption) (*BusinessUniverseUpdateResponse, error)
	//*
	// Company
	CreateCompany(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	GetCompany(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	GetCompanies(ctx context.Context, in *GetsRequest, opts ...grpc.CallOption) (*CompaniesGetResponse, error)
	UpdateCompany(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	DeleteCompany(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Company bank
	AddCompanyBank(ctx context.Context, in *AddCompanyBankRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	GetCompanyBank(ctx context.Context, in *GetBankRequest, opts ...grpc.CallOption) (*GetBankResponse, error)
	GetCompanyBanks(ctx context.Context, in *GetCompanyBanksRequest, opts ...grpc.CallOption) (*GetBanksResponse, error)
	UpdateCompanyBank(ctx context.Context, in *UpdateBankRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	CloseCompanyBank(ctx context.Context, in *CloseBankRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	// Company contact info
	AddCompanyContactInfo(ctx context.Context, in *AddCompanyContactInfoRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	GetCompanyContactInfo(ctx context.Context, in *GetContactInfoRequest, opts ...grpc.CallOption) (*GetContactInfoResponse, error)
	GetCompanyContactInfos(ctx context.Context, in *GetCompanyContactInfosRequest, opts ...grpc.CallOption) (*GetContactInfosResponse, error)
	UpdateCompanyContactInfo(ctx context.Context, in *UpdateContactInfoRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	DeleteCompanyContactInfo(ctx context.Context, in *DeleteContactInfoRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	//*
	// Customer
	CreateCustomer(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	GetCustomer(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	GetCustomers(ctx context.Context, in *GetsRequest, opts ...grpc.CallOption) (*CustomersGetResponse, error)
	UpdateCustomer(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	DeleteCustomer(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Customer bank
	AddCustomerBank(ctx context.Context, in *AddCustomerBankRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	GetCustomerBank(ctx context.Context, in *GetBankRequest, opts ...grpc.CallOption) (*GetBankResponse, error)
	GetCustomerBanks(ctx context.Context, in *GetCustomerBanksRequest, opts ...grpc.CallOption) (*GetBanksResponse, error)
	UpdateCustomerBank(ctx context.Context, in *UpdateBankRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	CloseCustomerBank(ctx context.Context, in *CloseBankRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	// Customer contact info
	AddCustomerContactInfo(ctx context.Context, in *AddCustomerContactInfoRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	GetCustomerContactInfo(ctx context.Context, in *GetContactInfoRequest, opts ...grpc.CallOption) (*GetContactInfoResponse, error)
	GetCustomerContactInfos(ctx context.Context, in *GetCustomerContactInfosRequest, opts ...grpc.CallOption) (*GetContactInfosResponse, error)
	UpdateCustomerContactInfo(ctx context.Context, in *UpdateContactInfoRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	DeleteCustomerContactInfo(ctx context.Context, in *DeleteContactInfoRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	//*
	// Contact types
	CreateContactType(ctx context.Context, in *ContactTypeCreateRequest, opts ...grpc.CallOption) (*ContactTypeResponse, error)
	GetContactType(ctx context.Context, in *ContactTypeGetRequest, opts ...grpc.CallOption) (*ContactTypeResponse, error)
	GetContactTypes(ctx context.Context, in *ContactTypesGetRequest, opts ...grpc.CallOption) (*ContactTypesResponse, error)
	UpdateContactType(ctx context.Context, in *ContactTypeUpdateRequest, opts ...grpc.CallOption) (*ContactTypeResponse, error)
}

type b24OrganizationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewB24OrganizationServiceClient(cc grpc.ClientConnInterface) B24OrganizationServiceClient {
	return &b24OrganizationServiceClient{cc}
}

func (c *b24OrganizationServiceClient) CreateBusinessUniverse(ctx context.Context, in *BusinessUniverseCreateRequest, opts ...grpc.CallOption) (*BusinessUniverseCreateResponse, error) {
	out := new(BusinessUniverseCreateResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/CreateBusinessUniverse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetBusinessUniverse(ctx context.Context, in *BusinessUniverseGetRequest, opts ...grpc.CallOption) (*BusinessUniverseGetResponse, error) {
	out := new(BusinessUniverseGetResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetBusinessUniverse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) UpdateBusinessUniverse(ctx context.Context, in *BusinessUniverseUpdateRequest, opts ...grpc.CallOption) (*BusinessUniverseUpdateResponse, error) {
	out := new(BusinessUniverseUpdateResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/UpdateBusinessUniverse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) CreateCompany(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/CreateCompany", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCompany(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCompany", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCompanies(ctx context.Context, in *GetsRequest, opts ...grpc.CallOption) (*CompaniesGetResponse, error) {
	out := new(CompaniesGetResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCompanies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) UpdateCompany(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/UpdateCompany", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) DeleteCompany(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/DeleteCompany", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) AddCompanyBank(ctx context.Context, in *AddCompanyBankRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/AddCompanyBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCompanyBank(ctx context.Context, in *GetBankRequest, opts ...grpc.CallOption) (*GetBankResponse, error) {
	out := new(GetBankResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCompanyBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCompanyBanks(ctx context.Context, in *GetCompanyBanksRequest, opts ...grpc.CallOption) (*GetBanksResponse, error) {
	out := new(GetBanksResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCompanyBanks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) UpdateCompanyBank(ctx context.Context, in *UpdateBankRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/UpdateCompanyBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) CloseCompanyBank(ctx context.Context, in *CloseBankRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/CloseCompanyBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) AddCompanyContactInfo(ctx context.Context, in *AddCompanyContactInfoRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/AddCompanyContactInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCompanyContactInfo(ctx context.Context, in *GetContactInfoRequest, opts ...grpc.CallOption) (*GetContactInfoResponse, error) {
	out := new(GetContactInfoResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCompanyContactInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCompanyContactInfos(ctx context.Context, in *GetCompanyContactInfosRequest, opts ...grpc.CallOption) (*GetContactInfosResponse, error) {
	out := new(GetContactInfosResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCompanyContactInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) UpdateCompanyContactInfo(ctx context.Context, in *UpdateContactInfoRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/UpdateCompanyContactInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) DeleteCompanyContactInfo(ctx context.Context, in *DeleteContactInfoRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/DeleteCompanyContactInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) CreateCustomer(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCustomer(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCustomers(ctx context.Context, in *GetsRequest, opts ...grpc.CallOption) (*CustomersGetResponse, error) {
	out := new(CustomersGetResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCustomers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) UpdateCustomer(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/UpdateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) DeleteCustomer(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/DeleteCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) AddCustomerBank(ctx context.Context, in *AddCustomerBankRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/AddCustomerBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCustomerBank(ctx context.Context, in *GetBankRequest, opts ...grpc.CallOption) (*GetBankResponse, error) {
	out := new(GetBankResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCustomerBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCustomerBanks(ctx context.Context, in *GetCustomerBanksRequest, opts ...grpc.CallOption) (*GetBanksResponse, error) {
	out := new(GetBanksResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCustomerBanks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) UpdateCustomerBank(ctx context.Context, in *UpdateBankRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/UpdateCustomerBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) CloseCustomerBank(ctx context.Context, in *CloseBankRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/CloseCustomerBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) AddCustomerContactInfo(ctx context.Context, in *AddCustomerContactInfoRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/AddCustomerContactInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCustomerContactInfo(ctx context.Context, in *GetContactInfoRequest, opts ...grpc.CallOption) (*GetContactInfoResponse, error) {
	out := new(GetContactInfoResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCustomerContactInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetCustomerContactInfos(ctx context.Context, in *GetCustomerContactInfosRequest, opts ...grpc.CallOption) (*GetContactInfosResponse, error) {
	out := new(GetContactInfosResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetCustomerContactInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) UpdateCustomerContactInfo(ctx context.Context, in *UpdateContactInfoRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/UpdateCustomerContactInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) DeleteCustomerContactInfo(ctx context.Context, in *DeleteContactInfoRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/DeleteCustomerContactInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) CreateContactType(ctx context.Context, in *ContactTypeCreateRequest, opts ...grpc.CallOption) (*ContactTypeResponse, error) {
	out := new(ContactTypeResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/CreateContactType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetContactType(ctx context.Context, in *ContactTypeGetRequest, opts ...grpc.CallOption) (*ContactTypeResponse, error) {
	out := new(ContactTypeResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetContactType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) GetContactTypes(ctx context.Context, in *ContactTypesGetRequest, opts ...grpc.CallOption) (*ContactTypesResponse, error) {
	out := new(ContactTypesResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/GetContactTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *b24OrganizationServiceClient) UpdateContactType(ctx context.Context, in *ContactTypeUpdateRequest, opts ...grpc.CallOption) (*ContactTypeResponse, error) {
	out := new(ContactTypeResponse)
	err := c.cc.Invoke(ctx, "/organization.B24OrganizationService/UpdateContactType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// B24OrganizationServiceServer is the server API for B24OrganizationService service.
// All implementations must embed UnimplementedB24OrganizationServiceServer
// for forward compatibility
type B24OrganizationServiceServer interface {
	//*
	// Business Universe
	CreateBusinessUniverse(context.Context, *BusinessUniverseCreateRequest) (*BusinessUniverseCreateResponse, error)
	GetBusinessUniverse(context.Context, *BusinessUniverseGetRequest) (*BusinessUniverseGetResponse, error)
	UpdateBusinessUniverse(context.Context, *BusinessUniverseUpdateRequest) (*BusinessUniverseUpdateResponse, error)
	//*
	// Company
	CreateCompany(context.Context, *CreateRequest) (*CompanyResponse, error)
	GetCompany(context.Context, *GetRequest) (*CompanyResponse, error)
	GetCompanies(context.Context, *GetsRequest) (*CompaniesGetResponse, error)
	UpdateCompany(context.Context, *UpdateRequest) (*CompanyResponse, error)
	DeleteCompany(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// Company bank
	AddCompanyBank(context.Context, *AddCompanyBankRequest) (*CompanyResponse, error)
	GetCompanyBank(context.Context, *GetBankRequest) (*GetBankResponse, error)
	GetCompanyBanks(context.Context, *GetCompanyBanksRequest) (*GetBanksResponse, error)
	UpdateCompanyBank(context.Context, *UpdateBankRequest) (*CompanyResponse, error)
	CloseCompanyBank(context.Context, *CloseBankRequest) (*CompanyResponse, error)
	// Company contact info
	AddCompanyContactInfo(context.Context, *AddCompanyContactInfoRequest) (*CompanyResponse, error)
	GetCompanyContactInfo(context.Context, *GetContactInfoRequest) (*GetContactInfoResponse, error)
	GetCompanyContactInfos(context.Context, *GetCompanyContactInfosRequest) (*GetContactInfosResponse, error)
	UpdateCompanyContactInfo(context.Context, *UpdateContactInfoRequest) (*CompanyResponse, error)
	DeleteCompanyContactInfo(context.Context, *DeleteContactInfoRequest) (*CompanyResponse, error)
	//*
	// Customer
	CreateCustomer(context.Context, *CreateRequest) (*CustomerResponse, error)
	GetCustomer(context.Context, *GetRequest) (*CustomerResponse, error)
	GetCustomers(context.Context, *GetsRequest) (*CustomersGetResponse, error)
	UpdateCustomer(context.Context, *UpdateRequest) (*CustomerResponse, error)
	DeleteCustomer(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// Customer bank
	AddCustomerBank(context.Context, *AddCustomerBankRequest) (*CustomerResponse, error)
	GetCustomerBank(context.Context, *GetBankRequest) (*GetBankResponse, error)
	GetCustomerBanks(context.Context, *GetCustomerBanksRequest) (*GetBanksResponse, error)
	UpdateCustomerBank(context.Context, *UpdateBankRequest) (*CustomerResponse, error)
	CloseCustomerBank(context.Context, *CloseBankRequest) (*CustomerResponse, error)
	// Customer contact info
	AddCustomerContactInfo(context.Context, *AddCustomerContactInfoRequest) (*CustomerResponse, error)
	GetCustomerContactInfo(context.Context, *GetContactInfoRequest) (*GetContactInfoResponse, error)
	GetCustomerContactInfos(context.Context, *GetCustomerContactInfosRequest) (*GetContactInfosResponse, error)
	UpdateCustomerContactInfo(context.Context, *UpdateContactInfoRequest) (*CustomerResponse, error)
	DeleteCustomerContactInfo(context.Context, *DeleteContactInfoRequest) (*CustomerResponse, error)
	//*
	// Contact types
	CreateContactType(context.Context, *ContactTypeCreateRequest) (*ContactTypeResponse, error)
	GetContactType(context.Context, *ContactTypeGetRequest) (*ContactTypeResponse, error)
	GetContactTypes(context.Context, *ContactTypesGetRequest) (*ContactTypesResponse, error)
	UpdateContactType(context.Context, *ContactTypeUpdateRequest) (*ContactTypeResponse, error)
	mustEmbedUnimplementedB24OrganizationServiceServer()
}

// UnimplementedB24OrganizationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedB24OrganizationServiceServer struct {
}

func (UnimplementedB24OrganizationServiceServer) CreateBusinessUniverse(context.Context, *BusinessUniverseCreateRequest) (*BusinessUniverseCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBusinessUniverse not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetBusinessUniverse(context.Context, *BusinessUniverseGetRequest) (*BusinessUniverseGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessUniverse not implemented")
}
func (UnimplementedB24OrganizationServiceServer) UpdateBusinessUniverse(context.Context, *BusinessUniverseUpdateRequest) (*BusinessUniverseUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBusinessUniverse not implemented")
}
func (UnimplementedB24OrganizationServiceServer) CreateCompany(context.Context, *CreateRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCompany not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCompany(context.Context, *GetRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompany not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCompanies(context.Context, *GetsRequest) (*CompaniesGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanies not implemented")
}
func (UnimplementedB24OrganizationServiceServer) UpdateCompany(context.Context, *UpdateRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCompany not implemented")
}
func (UnimplementedB24OrganizationServiceServer) DeleteCompany(context.Context, *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCompany not implemented")
}
func (UnimplementedB24OrganizationServiceServer) AddCompanyBank(context.Context, *AddCompanyBankRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCompanyBank not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCompanyBank(context.Context, *GetBankRequest) (*GetBankResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyBank not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCompanyBanks(context.Context, *GetCompanyBanksRequest) (*GetBanksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyBanks not implemented")
}
func (UnimplementedB24OrganizationServiceServer) UpdateCompanyBank(context.Context, *UpdateBankRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCompanyBank not implemented")
}
func (UnimplementedB24OrganizationServiceServer) CloseCompanyBank(context.Context, *CloseBankRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseCompanyBank not implemented")
}
func (UnimplementedB24OrganizationServiceServer) AddCompanyContactInfo(context.Context, *AddCompanyContactInfoRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCompanyContactInfo not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCompanyContactInfo(context.Context, *GetContactInfoRequest) (*GetContactInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyContactInfo not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCompanyContactInfos(context.Context, *GetCompanyContactInfosRequest) (*GetContactInfosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyContactInfos not implemented")
}
func (UnimplementedB24OrganizationServiceServer) UpdateCompanyContactInfo(context.Context, *UpdateContactInfoRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCompanyContactInfo not implemented")
}
func (UnimplementedB24OrganizationServiceServer) DeleteCompanyContactInfo(context.Context, *DeleteContactInfoRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCompanyContactInfo not implemented")
}
func (UnimplementedB24OrganizationServiceServer) CreateCustomer(context.Context, *CreateRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCustomer(context.Context, *GetRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomer not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCustomers(context.Context, *GetsRequest) (*CustomersGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomers not implemented")
}
func (UnimplementedB24OrganizationServiceServer) UpdateCustomer(context.Context, *UpdateRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomer not implemented")
}
func (UnimplementedB24OrganizationServiceServer) DeleteCustomer(context.Context, *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomer not implemented")
}
func (UnimplementedB24OrganizationServiceServer) AddCustomerBank(context.Context, *AddCustomerBankRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCustomerBank not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCustomerBank(context.Context, *GetBankRequest) (*GetBankResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerBank not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCustomerBanks(context.Context, *GetCustomerBanksRequest) (*GetBanksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerBanks not implemented")
}
func (UnimplementedB24OrganizationServiceServer) UpdateCustomerBank(context.Context, *UpdateBankRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomerBank not implemented")
}
func (UnimplementedB24OrganizationServiceServer) CloseCustomerBank(context.Context, *CloseBankRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseCustomerBank not implemented")
}
func (UnimplementedB24OrganizationServiceServer) AddCustomerContactInfo(context.Context, *AddCustomerContactInfoRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCustomerContactInfo not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCustomerContactInfo(context.Context, *GetContactInfoRequest) (*GetContactInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerContactInfo not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetCustomerContactInfos(context.Context, *GetCustomerContactInfosRequest) (*GetContactInfosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerContactInfos not implemented")
}
func (UnimplementedB24OrganizationServiceServer) UpdateCustomerContactInfo(context.Context, *UpdateContactInfoRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomerContactInfo not implemented")
}
func (UnimplementedB24OrganizationServiceServer) DeleteCustomerContactInfo(context.Context, *DeleteContactInfoRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomerContactInfo not implemented")
}
func (UnimplementedB24OrganizationServiceServer) CreateContactType(context.Context, *ContactTypeCreateRequest) (*ContactTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContactType not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetContactType(context.Context, *ContactTypeGetRequest) (*ContactTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContactType not implemented")
}
func (UnimplementedB24OrganizationServiceServer) GetContactTypes(context.Context, *ContactTypesGetRequest) (*ContactTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContactTypes not implemented")
}
func (UnimplementedB24OrganizationServiceServer) UpdateContactType(context.Context, *ContactTypeUpdateRequest) (*ContactTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContactType not implemented")
}
func (UnimplementedB24OrganizationServiceServer) mustEmbedUnimplementedB24OrganizationServiceServer() {
}

// UnsafeB24OrganizationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to B24OrganizationServiceServer will
// result in compilation errors.
type UnsafeB24OrganizationServiceServer interface {
	mustEmbedUnimplementedB24OrganizationServiceServer()
}

func RegisterB24OrganizationServiceServer(s grpc.ServiceRegistrar, srv B24OrganizationServiceServer) {
	s.RegisterService(&B24OrganizationService_ServiceDesc, srv)
}

func _B24OrganizationService_CreateBusinessUniverse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BusinessUniverseCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).CreateBusinessUniverse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/CreateBusinessUniverse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).CreateBusinessUniverse(ctx, req.(*BusinessUniverseCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetBusinessUniverse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BusinessUniverseGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetBusinessUniverse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetBusinessUniverse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetBusinessUniverse(ctx, req.(*BusinessUniverseGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_UpdateBusinessUniverse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BusinessUniverseUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).UpdateBusinessUniverse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/UpdateBusinessUniverse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).UpdateBusinessUniverse(ctx, req.(*BusinessUniverseUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_CreateCompany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).CreateCompany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/CreateCompany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).CreateCompany(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCompany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCompany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCompany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCompany(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCompanies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCompanies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCompanies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCompanies(ctx, req.(*GetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_UpdateCompany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).UpdateCompany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/UpdateCompany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).UpdateCompany(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_DeleteCompany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).DeleteCompany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/DeleteCompany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).DeleteCompany(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_AddCompanyBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCompanyBankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).AddCompanyBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/AddCompanyBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).AddCompanyBank(ctx, req.(*AddCompanyBankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCompanyBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCompanyBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCompanyBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCompanyBank(ctx, req.(*GetBankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCompanyBanks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyBanksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCompanyBanks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCompanyBanks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCompanyBanks(ctx, req.(*GetCompanyBanksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_UpdateCompanyBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).UpdateCompanyBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/UpdateCompanyBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).UpdateCompanyBank(ctx, req.(*UpdateBankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_CloseCompanyBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseBankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).CloseCompanyBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/CloseCompanyBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).CloseCompanyBank(ctx, req.(*CloseBankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_AddCompanyContactInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCompanyContactInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).AddCompanyContactInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/AddCompanyContactInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).AddCompanyContactInfo(ctx, req.(*AddCompanyContactInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCompanyContactInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContactInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCompanyContactInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCompanyContactInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCompanyContactInfo(ctx, req.(*GetContactInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCompanyContactInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyContactInfosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCompanyContactInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCompanyContactInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCompanyContactInfos(ctx, req.(*GetCompanyContactInfosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_UpdateCompanyContactInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateContactInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).UpdateCompanyContactInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/UpdateCompanyContactInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).UpdateCompanyContactInfo(ctx, req.(*UpdateContactInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_DeleteCompanyContactInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContactInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).DeleteCompanyContactInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/DeleteCompanyContactInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).DeleteCompanyContactInfo(ctx, req.(*DeleteContactInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).CreateCustomer(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCustomer(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCustomers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCustomers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCustomers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCustomers(ctx, req.(*GetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).UpdateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).UpdateCustomer(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_DeleteCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).DeleteCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/DeleteCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).DeleteCustomer(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_AddCustomerBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCustomerBankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).AddCustomerBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/AddCustomerBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).AddCustomerBank(ctx, req.(*AddCustomerBankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCustomerBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCustomerBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCustomerBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCustomerBank(ctx, req.(*GetBankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCustomerBanks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerBanksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCustomerBanks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCustomerBanks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCustomerBanks(ctx, req.(*GetCustomerBanksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_UpdateCustomerBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).UpdateCustomerBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/UpdateCustomerBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).UpdateCustomerBank(ctx, req.(*UpdateBankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_CloseCustomerBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseBankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).CloseCustomerBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/CloseCustomerBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).CloseCustomerBank(ctx, req.(*CloseBankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_AddCustomerContactInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCustomerContactInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).AddCustomerContactInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/AddCustomerContactInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).AddCustomerContactInfo(ctx, req.(*AddCustomerContactInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCustomerContactInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContactInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCustomerContactInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCustomerContactInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCustomerContactInfo(ctx, req.(*GetContactInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetCustomerContactInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerContactInfosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetCustomerContactInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetCustomerContactInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetCustomerContactInfos(ctx, req.(*GetCustomerContactInfosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_UpdateCustomerContactInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateContactInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).UpdateCustomerContactInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/UpdateCustomerContactInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).UpdateCustomerContactInfo(ctx, req.(*UpdateContactInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_DeleteCustomerContactInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContactInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).DeleteCustomerContactInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/DeleteCustomerContactInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).DeleteCustomerContactInfo(ctx, req.(*DeleteContactInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_CreateContactType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactTypeCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).CreateContactType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/CreateContactType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).CreateContactType(ctx, req.(*ContactTypeCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetContactType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactTypeGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetContactType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetContactType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetContactType(ctx, req.(*ContactTypeGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_GetContactTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactTypesGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).GetContactTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/GetContactTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).GetContactTypes(ctx, req.(*ContactTypesGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _B24OrganizationService_UpdateContactType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactTypeUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(B24OrganizationServiceServer).UpdateContactType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.B24OrganizationService/UpdateContactType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(B24OrganizationServiceServer).UpdateContactType(ctx, req.(*ContactTypeUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// B24OrganizationService_ServiceDesc is the grpc.ServiceDesc for B24OrganizationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var B24OrganizationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "organization.B24OrganizationService",
	HandlerType: (*B24OrganizationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBusinessUniverse",
			Handler:    _B24OrganizationService_CreateBusinessUniverse_Handler,
		},
		{
			MethodName: "GetBusinessUniverse",
			Handler:    _B24OrganizationService_GetBusinessUniverse_Handler,
		},
		{
			MethodName: "UpdateBusinessUniverse",
			Handler:    _B24OrganizationService_UpdateBusinessUniverse_Handler,
		},
		{
			MethodName: "CreateCompany",
			Handler:    _B24OrganizationService_CreateCompany_Handler,
		},
		{
			MethodName: "GetCompany",
			Handler:    _B24OrganizationService_GetCompany_Handler,
		},
		{
			MethodName: "GetCompanies",
			Handler:    _B24OrganizationService_GetCompanies_Handler,
		},
		{
			MethodName: "UpdateCompany",
			Handler:    _B24OrganizationService_UpdateCompany_Handler,
		},
		{
			MethodName: "DeleteCompany",
			Handler:    _B24OrganizationService_DeleteCompany_Handler,
		},
		{
			MethodName: "AddCompanyBank",
			Handler:    _B24OrganizationService_AddCompanyBank_Handler,
		},
		{
			MethodName: "GetCompanyBank",
			Handler:    _B24OrganizationService_GetCompanyBank_Handler,
		},
		{
			MethodName: "GetCompanyBanks",
			Handler:    _B24OrganizationService_GetCompanyBanks_Handler,
		},
		{
			MethodName: "UpdateCompanyBank",
			Handler:    _B24OrganizationService_UpdateCompanyBank_Handler,
		},
		{
			MethodName: "CloseCompanyBank",
			Handler:    _B24OrganizationService_CloseCompanyBank_Handler,
		},
		{
			MethodName: "AddCompanyContactInfo",
			Handler:    _B24OrganizationService_AddCompanyContactInfo_Handler,
		},
		{
			MethodName: "GetCompanyContactInfo",
			Handler:    _B24OrganizationService_GetCompanyContactInfo_Handler,
		},
		{
			MethodName: "GetCompanyContactInfos",
			Handler:    _B24OrganizationService_GetCompanyContactInfos_Handler,
		},
		{
			MethodName: "UpdateCompanyContactInfo",
			Handler:    _B24OrganizationService_UpdateCompanyContactInfo_Handler,
		},
		{
			MethodName: "DeleteCompanyContactInfo",
			Handler:    _B24OrganizationService_DeleteCompanyContactInfo_Handler,
		},
		{
			MethodName: "CreateCustomer",
			Handler:    _B24OrganizationService_CreateCustomer_Handler,
		},
		{
			MethodName: "GetCustomer",
			Handler:    _B24OrganizationService_GetCustomer_Handler,
		},
		{
			MethodName: "GetCustomers",
			Handler:    _B24OrganizationService_GetCustomers_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _B24OrganizationService_UpdateCustomer_Handler,
		},
		{
			MethodName: "DeleteCustomer",
			Handler:    _B24OrganizationService_DeleteCustomer_Handler,
		},
		{
			MethodName: "AddCustomerBank",
			Handler:    _B24OrganizationService_AddCustomerBank_Handler,
		},
		{
			MethodName: "GetCustomerBank",
			Handler:    _B24OrganizationService_GetCustomerBank_Handler,
		},
		{
			MethodName: "GetCustomerBanks",
			Handler:    _B24OrganizationService_GetCustomerBanks_Handler,
		},
		{
			MethodName: "UpdateCustomerBank",
			Handler:    _B24OrganizationService_UpdateCustomerBank_Handler,
		},
		{
			MethodName: "CloseCustomerBank",
			Handler:    _B24OrganizationService_CloseCustomerBank_Handler,
		},
		{
			MethodName: "AddCustomerContactInfo",
			Handler:    _B24OrganizationService_AddCustomerContactInfo_Handler,
		},
		{
			MethodName: "GetCustomerContactInfo",
			Handler:    _B24OrganizationService_GetCustomerContactInfo_Handler,
		},
		{
			MethodName: "GetCustomerContactInfos",
			Handler:    _B24OrganizationService_GetCustomerContactInfos_Handler,
		},
		{
			MethodName: "UpdateCustomerContactInfo",
			Handler:    _B24OrganizationService_UpdateCustomerContactInfo_Handler,
		},
		{
			MethodName: "DeleteCustomerContactInfo",
			Handler:    _B24OrganizationService_DeleteCustomerContactInfo_Handler,
		},
		{
			MethodName: "CreateContactType",
			Handler:    _B24OrganizationService_CreateContactType_Handler,
		},
		{
			MethodName: "GetContactType",
			Handler:    _B24OrganizationService_GetContactType_Handler,
		},
		{
			MethodName: "GetContactTypes",
			Handler:    _B24OrganizationService_GetContactTypes_Handler,
		},
		{
			MethodName: "UpdateContactType",
			Handler:    _B24OrganizationService_UpdateContactType_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organization.proto",
}
